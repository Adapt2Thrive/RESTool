{"version":3,"sources":["helpers/data.helpers.ts","services/http.service.ts","services/config.service.ts","components/app.context.ts","components/withContext/withContext.comp.tsx","components/loader/loader.comp.tsx","components/button/button.comp.tsx","components/table/table.comp.tsx","components/cards/cards.comp.tsx","components/formRow/formRow.comp.tsx","components/queryParams/queryParams.comp.tsx","components/popup/popup.comp.tsx","helpers/file.helpers.ts","components/formPopup/formPopup.comp.tsx","components/filterField/filterField.comp.tsx","components/page/page.comp.tsx","components/navigation/navigation.comp.tsx","components/customStyles/customStyles.comp.tsx","components/app.tsx","serviceWorker.ts","index.tsx"],"names":["dataHelpers","data","dataPath","attr","extractedData","digProps","split","prop","field","type","arrayType","HttpService","baseUrl","unauthorizedRedirectUrl","errorMessageDataPath","requestHeaders","this","url","indexOf","rawData","outputUrl","Object","keys","forEach","key","urlParamName","replace","queryParams","length","replaceParamsInUrl","params","param","name","value","urlReplaceOnly","push","firstSeparator","join","reqUrl","urlIsAbsolute","origUrl","buildUrl","method","toUpperCase","headers","assign","body","undefined","res","errorMessage","json","path","dataAtPath","extractDataByDataPath","status","statusText","redirectUrl","encodeURIComponent","document","location","href","Error","getErrorMessage","responseType","fetch","ok","text","handleError","buildRequest","makeRequest","httpService","HTTPService","endsWith","import","default","getRemoteConfig","config","isValid","configSchema","require","validate","Ajv","allErrors","verbose","compile","firstError","errors","message","console","error","AppContext","React","createContext","activePage","setError","setActivePage","withAppContext","Component","props","Consumer","context","Loader","className","Button","color","children","Table","items","fields","callbacks","customActions","customLabels","editLabel","buttons","editItem","deleteLabel","deleteItem","actionColumnHeader","tableColumnHeaders","actions","map","label","item","rowIdx","fieldIdx","origField","src","alt","target","rel","style","backgroundColor","renderTableCell","put","onClick","call","title","aria-hidden","action","idx","icon","delete","Cards","cardIdx","renderRow","FormRow","direction","showReset","onChange","useState","optionSources","setOptionSources","pageHeaders","addArrayItemLabel","addArrayItem","clearLabel","clearInput","renderArrayItems","originalField","array","itemIdx","inputField","renderFieldInput","fieldName","updatedArray","localValue","splice","removeItemToFieldArray","aria-label","e","preventDefault","addItemToFieldArray","changeCallback","inputProps","defaultPlaceholder","placeholder","disabled","readonly","required","checked","optionSource","a","async","actualMethod","result","optionSourceData","option","valuePath","displayPath","display","toast","loadOptionSourceFromRemote","sortBy","finalOptions","options","sortedOptions","orderBy","placeholders","object","number","valueAsNumber","email","password","accept","file","date","originalName","QueryParams","initialParams","submitCallback","setQueryParams","submit","formChanged","submitAfterChange","updatedQueryParams","useEffect","onSubmit","queryParam","Fragment","portalRoot","getElementById","createElement","setAttribute","append","PortalPopup","el","componentDidMount","appendChild","componentWillUnmount","removeChild","ReactDOM","createPortal","Popup","_handleKeyDown","show","closeCallback","keyCode","closeLabel","closeForm","ref","refCallback","addEventListener","bind","removeEventListener","fileHelpers","fieldIndex","flatten","unflatten","FormPopup","getSingleConfig","methodConfig","fieldsCopy","JSON","parse","stringify","loading","setLoading","formFields","setFormFields","finalRawData","setFinalRawData","submitForm","finalObject","includeOriginalFields","formData","FormData","containFiles","isMultipartForm","validationError","checkIfFieldIsObject","fileInput","querySelector","files","firstFile","success","updatedFormFields","flattenData","initFormFields","FilterField","toLowerCase","Page","page","useParams","useHistory","pageMethods","methods","getAllConfig","getAll","getSingle","postConfig","post","putConfig","deleteConfig","addItemLabel","addItem","addItemFormTitle","formTitles","editItemFormTitle","openedPopup","setOpenedPopup","setItems","filter","setFilter","openEditPopup","updateItem","openCustomActionPopup","performAction","extractQueryParams","parsedParams","QueryString","search","decodeURIComponent","getAllRequest","dataTransform","Array","isArray","orderedItems","window","confirm","submitQueryParams","updatedParams","queryState","nextActivePage","pages","p","pIdx","id","parseInt","description","fieldsToFilter","filterable","filteredItems","passFilter","renderTable","renderPageContent","refreshData","Navigation","isOpened","setIsOpened","to","activeClassName","CustomStyles","cssVars","styles","vars","arr","dangerouslySetInnerHTML","__html","defaultAppName","changeFavicon","link","oldLink","head","App","firstLoad","setFirstLoad","setConfig","loadConfig","windowConfig","RESTool","remoteConfig","ConfigService","loadDefaultConfig","favicon","remoteUrl","validateConfig","appName","Provider","customStyles","scrollDuration","cosParameter","scrollY","scrollCount","oldTimestamp","performance","now","requestAnimationFrame","step","newTimestamp","Math","PI","scrollTo","round","cos","scrollToTop","exact","component","position","POSITION","TOP_CENTER","autoClose","draggable","Boolean","hostname","match","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2639811c.chunk.js","sourcesContent":["import { IConfigInputField } from \"../common/models/config.model\";\n\nclass DataHelpers {\n\n  public extractDataByDataPath(data: any, dataPath: string, attr: string | null = null) {\n    if (!data || !dataPath) {\n      if (attr) {\n        return data[attr];\n      }\n      return data;\n    }\n\t\n    let extractedData: any = data;\n    const digProps: string[] = dataPath.split('.');\n\n    for (let prop of digProps) {\n      if (typeof extractedData[prop] !== 'undefined') {\n        extractedData = extractedData[prop];\n      } else {\n        return null;\n      }\n    }\n\n    if (typeof extractedData === 'undefined') {\n      return null;\n    }\n\n    if (attr) {\n      return extractedData[attr];\n    }\n\n    return extractedData;\n  }\n\n  public checkIfFieldIsObject(field: IConfigInputField): boolean {\n    if (field.type === 'object') {\n      return true;\n    }\n\n    if (field.type === 'array') {\n      if (!field.arrayType || field.arrayType === 'object') {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n\nexport const dataHelpers = new DataHelpers();","import { TConfigMethod, IConfigInputField } from '../common/models/config.model';\nimport { dataHelpers } from '../helpers/data.helpers';\n\nexport type ResponseType = 'json' | 'text' | 'boolean' | 'status';\n\nexport interface IFetchParams {\n  origUrl: string\n  method?: TConfigMethod\n  headers?: any\n  queryParams?: IConfigInputField[]\n  rawData?: any\n  body?: any\n  responseType?: ResponseType\n}\n\nclass HttpService {\n  public baseUrl: string;\n  public unauthorizedRedirectUrl: string;\n  public errorMessageDataPath: string | string[];\n  public requestHeaders: any;\n\n  constructor(baseUrl: string = '', unauthorizedRedirectUrl: string = '', errorMessageDataPath: string = '') {\n    this.baseUrl = baseUrl || '';\n    this.unauthorizedRedirectUrl = unauthorizedRedirectUrl || '';\n    this.errorMessageDataPath = errorMessageDataPath || '';\n    this.requestHeaders = {};\n  }\n\n  private urlIsAbsolute(url: string) {\n    if (url.indexOf('http') === 0 || url.indexOf('https') === 0) {\n      return true;\n    }\n    return false;\n  }\n\n  private replaceParamsInUrl(url: string, rawData?: any): string {\n    if (!rawData || typeof rawData !== 'object') {\n      return url;\n    }\n\n    let outputUrl = url;\n    \n    Object.keys(rawData).forEach((key) => {\n      const urlParamName = `:${key}`;\n      outputUrl = outputUrl.replace(urlParamName, rawData[key] as string);\n    });\n\n    return outputUrl;\n  }\n\n  private buildUrl(url: string, queryParams: IConfigInputField[] = [], rawData?: any): string {\n    if (!queryParams || !queryParams.length) {\n      return this.replaceParamsInUrl(url, rawData);\n    }\n\n    let outputUrl = url;\n    const params = [];\n\n    for (let param of queryParams) {\n      if (!param.name || typeof param.value === 'undefined') {\n        continue;\n      }\n\n      // TODO: Add docs to \"urlReplaceOnly\"\n      if (param.urlReplaceOnly) {\n        const urlParamName = `:${param.name}`;\n        outputUrl = outputUrl.replace(urlParamName, param.value as string);\n      } else {\n        params.push(`${param.name}=${param.value || ''}`);\n      }\n    }\n\n    if (params.length) {\n      const firstSeparator = url.indexOf('?') >= 0 ? '&' : '?';\n      return outputUrl + firstSeparator + params.join('&');\n    }\n\n    return outputUrl;\n  }\n\n  private buildRequest(params: IFetchParams): { url: string, params: any } {\n    const reqUrl: string = this.urlIsAbsolute(params.origUrl) ? params.origUrl : this.baseUrl + params.origUrl;\n    const finalUrl: string = this.buildUrl(reqUrl, params.queryParams, params.rawData);\n    const requestParams = {\n      method: params.method ? params.method.toUpperCase() : 'GET',\n      headers: Object.assign({}, this.requestHeaders, params.headers || {}),\n      body: params.method === 'post' || params.method === 'put' || params.method === 'patch' ? params.body : undefined\n    };\n\n    return {\n      url: finalUrl,\n      params: requestParams\n    };\n  }\n\n  private async getErrorMessage(res: Response | any): Promise<string> {\n    let errorMessage: string = '';\n\n    try {\n      const body = await res.json();\n\n      for (const path of this.errorMessageDataPath) {\n        const dataAtPath = dataHelpers.extractDataByDataPath(body, path);\n\n        if (dataAtPath) {\n          errorMessage = dataAtPath;\n        }\n      }\n    } catch {} // TODO: proper handling of errors (^.^)\n\n    return errorMessage && errorMessage.length ?\n        errorMessage :\n        `${res.status} - ${res.statusText || ''}`;\n  }\n\n  private async handleError(res: Response) {\n    // In case response status is \"Unauthorized\", redirect to relevant url\n    if (res.status === 401 && this.unauthorizedRedirectUrl) {\n      const redirectUrl: string = this.unauthorizedRedirectUrl.replace(':returnUrl', encodeURIComponent(document.location.href));\n      document.location.href = redirectUrl;\n      return;\n    }\n\n    throw new Error(await this.getErrorMessage(res));\n  }\n\n  private async makeRequest(url: string, params: any = {}, responseType: ResponseType = 'json') {\n    const res: Response = await fetch(url, Object.assign({}, params, {}));\n    \n    if (res.ok) {\n      switch (responseType) {\n        case 'json':\n          return await res.json();  \n        case 'text':\n          return await res.text();\n        case 'boolean':\n          return true;\n        default:\n          return true;\n      }\n    }\n\n    await this.handleError(res);\n  }\n\n  public async fetch({ method, origUrl, queryParams, rawData, body, headers, responseType }: IFetchParams) {\n    const { url, params } = this.buildRequest({ method, origUrl, queryParams, rawData, body, headers });\n    return await this.makeRequest(url, params, responseType);\n  }\n}\n\nexport default HttpService;\n","import HTTPService from './http.service';\nimport { IConfig } from '../common/models/config.model';\nimport Ajv from 'ajv';\n\nconst httpService: HTTPService = new HTTPService();\n\nclass ConfigService extends HTTPService {\n\n  public async getRemoteConfig(url: string) {\n    if (url.endsWith('.js')) {\n      return (await import(/* webpackIgnore: true */url)).default;\n    }\n    return await httpService.fetch({\n      origUrl: url,\n    });\n  }\n\n  public async loadDefaultConfig() {\n    try {\n      return await this.getRemoteConfig('/config.json');\n    } catch (e) {\n      return (await this.getRemoteConfig('/config.js'));\n    }\n  }\n\n  public validateConfig(config: IConfig | null): { isValid: boolean, errorMessage: string | null } {\n    if (config === null) {\n      return {\n        isValid: true,\n        errorMessage: null,\n      }\n    }\n    const configSchema = require('../assets/schemas/config.schema.json');\n    const ajv = new Ajv({\n      allErrors: true,\n      verbose: true,\n    });\n    const validate = ajv.compile(configSchema);\n    const isValid = validate(config);\n    if (typeof isValid !== 'boolean') {\n      throw new Error('Unexpected asynchronous JSON validation');\n    }\n    if (isValid) {\n      return {\n        isValid,\n        errorMessage: null,\n      }\n    }\n    const firstError = validate.errors ? validate.errors[0] : undefined;\n    let errorMessage: string | null = null;\n    if (firstError?.message && firstError?.dataPath) {\n      errorMessage = `Error parsing configuration at \"${firstError.dataPath}\": ${firstError.message}`\n    } else if (firstError?.message) {\n      errorMessage = `Error parsing configuration: ${firstError.message}`\n    } else if (firstError?.dataPath) {\n      errorMessage = `Error parsing configuration at \"${firstError.dataPath}\"`\n    } else {\n      errorMessage = `Error parsing configuration`;\n    }\n    console.error(errorMessage);\n    console.error('All configuration errors: ', validate.errors);\n    return {\n      isValid,\n      errorMessage,\n    };\n  }\n\n}\n\nexport default new ConfigService();\n","import React from 'react';\nimport { IConfig, IConfigPage } from '../common/models/config.model';\nimport HttpService from '../services/http.service';\n\nexport interface IAppContext {\n  config: IConfig | null\n  activePage: IConfigPage | null\n  error: string | null\n  setError: (error: string | null) => void\n  setActivePage: (activePage: IConfigPage | null) => void\n  httpService: HttpService\n}\n\nexport const AppContext = React.createContext<IAppContext>({\n  config: null,\n  activePage: null,\n  error: null,\n  setError: () => {},\n  setActivePage: () => {},\n  httpService: new HttpService()\n});","import React from 'react';\nimport { AppContext } from '../app.context';\n\nexport const withAppContext = (Component: any) => {\n  return (props: any) => (\n    <AppContext.Consumer>    \n      {(context) => {\n        return <Component {...props} context={context} />\n      }}\n    </AppContext.Consumer>\n  );\n};","import React from 'react';\n\nimport './loader.scss';\n\nexport const Loader = () => {\n  return (\n    <div className=\"app-loader cp-spinner cp-balls small\"></div>\n  );\n};","import React from 'react';\n\nimport './button.scss';\n\ninterface IProps {\n  children: any\n  type?: 'submit' | 'button' | 'reset'\n  title?: string\n  className?: string\n  onClick?: (e: any) => void\n  color?: 'gray' | 'blue' | 'green' | 'red'\n}\n\nexport const Button = (props: IProps) => {\n  return (\n    <button {...props} className={`button ${props.className || ''} ${props.color || ''}`}>{props.children}</button>\n  );\n};","import React from 'react';\n\nimport { IConfigDisplayField, IConfigCustomAction, ICustomLabels } from '../../common/models/config.model';\nimport { dataHelpers } from '../../helpers/data.helpers';\nimport { Button } from '../button/button.comp';\n\nimport './table.scss';\n\ninterface IProps {\n  items: any[]\n  callbacks: {\n    delete: ((item: any) => void) | null\n    put: ((item: any) => void) | null\n    action: (item: any, action: IConfigCustomAction) => void\n  }\n  fields: IConfigDisplayField[]\n  customActions?: IConfigCustomAction[]\n  customLabels?: ICustomLabels\n}\n\nexport const Table = ({ items, fields, callbacks, customActions, customLabels }: IProps) => {\n  function renderTableCell(origField: IConfigDisplayField, value: any) {\n    if (value && typeof value === 'object') {\n      return 'object';\n    }\n\n    switch (origField.type) {\n      case 'text':\n        return <span>{value}</span>;\n      case 'boolean':\n        return <div className={`bool ${value ? 'true' : 'false'}`}></div>;\n      case 'image':\n        return <img src={value || ''} alt={value || origField.label || origField.name} />;\n      case 'url':\n        const url: string = (origField.url || value || '').replace(`:${origField.name}`, value);\n        return <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{value}</a>;\n      case 'colorbox':\n        return <div className=\"colorbox\" style={{ backgroundColor: value }}></div>;\n      default:\n        return value;\n    }\n  }\n\n  const editLabel = customLabels?.buttons?.editItem || 'Edit';\n  const deleteLabel = customLabels?.buttons?.deleteItem || 'Delete';\n  const actionColumnHeader = customLabels?.tableColumnHeaders?.actions || 'Actions';\n\n  return (\n    <div className=\"table-wrapper\">\n      <table className=\"pure-table\">\n        <thead>\n          <tr>\n            {\n              fields.map((field) => {\n                return <th key={`th_${field.name}`}>{field.label || field.name}</th>;\n              })\n            }\n            <th>{actionColumnHeader}</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            items.map((item, rowIdx) => {\n              return (\n                <tr key={`tr_${rowIdx}`}>\n                  {\n                    fields.map((field, fieldIdx) => {\n                      const value = dataHelpers.extractDataByDataPath(item, field.dataPath, field.name);\n                      return <td key={`td_${rowIdx}_${fieldIdx}`}>{renderTableCell(field, value)}</td>\n                    })\n                  }\n                  <td>\n                    <div className=\"actions-wrapper\">\n                      {\n                        callbacks.put &&\n                        <Button onClick={() => callbacks.put?.(item)} title={editLabel}>\n                          <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\n                        </Button>\n                      }\n                      {\n                        (customActions && customActions.length > 0) &&\n                        customActions.map((action, idx) => (\n                          <Button key={`action_${rowIdx}_${idx}`} onClick={() => callbacks.action(item, action)} title={action.name}>\n                            <i className={`fa fa-${action.icon || 'cogs'}`} aria-hidden=\"true\"></i>\n                          </Button>\n                        ))\n                      }\n                      {\n                        callbacks.delete &&\n                        <Button onClick={() => callbacks.delete?.(item)} title={deleteLabel}>\n                          <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n                        </Button>\n                      }\n                    </div>\n                  </td>\n                </tr>\n              );\n            })\n          }\n        </tbody>\n      </table>\n    </div>\n  );\n}","import React from 'react';\n\nimport { IConfigDisplayField, IConfigCustomAction, ICustomLabels } from '../../common/models/config.model';\nimport { dataHelpers } from '../../helpers/data.helpers';\nimport { Button } from '../button/button.comp';\n\nimport './cards.scss';\n\ninterface IProps {\n  items: any[]\n  callbacks: {\n    delete: ((item: any) => void) | null\n    put: ((item: any) => void) | null\n    action: (item: any, action: IConfigCustomAction) => void\n  }\n  fields: IConfigDisplayField[]\n  customActions?: IConfigCustomAction[]\n  customLabels?: ICustomLabels\n}\n\nexport const Cards = ({ items, fields, callbacks, customActions, customLabels }: IProps) => {\n  function renderRow(origField: IConfigDisplayField, value: any) {\n    if (value && typeof value === 'object') {\n      return 'object';\n    }\n\n    switch (origField.type) {\n      case 'text':\n        return <span>{value}</span>;\n      case 'boolean':\n        return <div className={`bool ${value ? 'true' : 'false'}`}></div>;\n      case 'image':\n        return <img src={value || ''} alt={value || origField.label || origField.name} />;\n      case 'url':\n        const url: string = (origField.url || value || '').replace(`:${origField.name}`, value);\n        return <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">{value}</a>;\n      case 'colorbox':\n        return <div className=\"colorbox\" style={{ backgroundColor: value }}></div>;\n      default:\n        return value;\n    }\n  }\n\n  const editLabel: string = customLabels?.buttons?.editItem || 'Edit';\n  const deleteLabel: string = customLabels?.buttons?.deleteItem || 'Delete';\n\n  return (\n    <div className=\"cards-wrapper\">\n      {\n        items.map((item, cardIdx) => {\n          return (\n            <div className=\"card\" key={`card_${cardIdx}`}>\n              {\n                fields.map((field, fieldIdx) => {\n                  const value = dataHelpers.extractDataByDataPath(item, field.dataPath, field.name);\n                  return (\n                    <div className={`card-row ${field.type}`} key={`card_${cardIdx}_${fieldIdx}`}>\n                      {\n                        field.type !== 'image' &&\n                        <label>{field.label || field.name}: </label>\n                      }\n                      {renderRow(field, value)}\n                    </div>\n                  );\n                })\n              }\n              <div className=\"actions-wrapper\">\n                {\n                  callbacks.put &&\n                  <Button onClick={() => callbacks.put?.(item)} title={editLabel}>\n                    <i className=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\n                  </Button>\n                }\n                {\n                  (customActions && customActions.length > 0) &&\n                  customActions.map((action, idx) => (\n                    <Button key={`action_${cardIdx}_${idx}`} onClick={() => callbacks.action(item, action)} title={action.name}>\n                      <i className={`fa fa-${action.icon || 'cogs'}`} aria-hidden=\"true\"></i>\n                    </Button>\n                  ))\n                }\n                {\n                  callbacks.delete &&\n                  <Button onClick={() => callbacks.delete?.(item)} title={deleteLabel}>\n                    <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n                  </Button>\n                }\n              </div>\n            </div>\n          );\n        })\n      }\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport { orderBy } from 'natural-orderby';\nimport { toast } from 'react-toastify';\n\nimport { IConfigInputField, IConfigOptionSource, ICustomLabels } from '../../common/models/config.model';\nimport { Button } from '../button/button.comp';\nimport { withAppContext } from '../withContext/withContext.comp';\nimport { IAppContext } from '../app.context';\nimport { dataHelpers } from '../../helpers/data.helpers';\n\nimport './formRow.scss';\n\ninterface IProps {\n  context: IAppContext\n  field: IConfigInputField\n  onChange: (fieldName: string, value: any, submitAfterChange?: boolean) => void\n  showReset?: boolean\n  direction?: 'row' | 'column'\n}\n\nexport const FormRow = withAppContext(({ context, field, direction, showReset, onChange }: IProps) => {\n  const [optionSources, setOptionSources] = useState<any>({});\n  const { httpService, activePage, config } = context;\n  const pageHeaders: any = activePage?.requestHeaders || {};\n  const customLabels: ICustomLabels | undefined = { ...config?.customLabels, ...activePage?.customLabels };\n  const addArrayItemLabel = customLabels?.buttons?.addArrayItem || 'Add Item';\n  const clearLabel = customLabels?.buttons?.clearInput || 'Clear';\n\n  async function loadOptionSourceFromRemote(fieldName: string, optionSource: IConfigOptionSource) {\n    try {\n      const { url, dataPath, actualMethod, requestHeaders } = optionSource;\n\n      if (!url) {\n        throw new Error(`URL option source (for field \"${fieldName}\") is empty.`);\n      }\n\n      const result = await httpService.fetch({\n        method: actualMethod || 'get',\n        origUrl: url,\n        queryParams: [],\n        headers: Object.assign({}, pageHeaders, requestHeaders || {}),\n      });\n\n      const extractedData = dataHelpers.extractDataByDataPath(result, dataPath);\n\n      if (!extractedData || !extractedData.length) {\n        throw new Error(`Option source data is empty (for field \"${fieldName}\")`);\n      }\n\n      // Map option source to fields\n      const optionSourceData = extractedData.map((option: any, idx: number) => {\n        const { valuePath, displayPath } = optionSource;\n\n        if (typeof option === 'string') {\n          return option;\n        }\n\n        return {\n          display: displayPath && option[displayPath] ? option[displayPath] : `Option ${idx + 1}`,\n          value: valuePath && option[valuePath] ? option[valuePath] : `${idx}`,\n        };\n      });\n\n      setOptionSources({\n        ...optionSources,\n        [fieldName]: optionSourceData\n      });\n    } catch (e) {\n      toast.error(e.message);\n    }\n  }\n\n  function addItemToFieldArray(e: any, originalField: IConfigInputField) {\n    e.preventDefault();\n\n    onChange(field.name, [\n      ...(originalField.value || []),\n      ''\n    ]);\n  }\n\n  function removeItemToFieldArray(originalField: IConfigInputField, idx: number) {\n    const updatedArray = [\n      ...(originalField.value || [])\n    ];\n\n    updatedArray.splice(idx, 1);\n\n    onChange(field.name, updatedArray);\n  }\n\n  function renderArrayItems(originalField: IConfigInputField) {\n    const array: any[] = originalField.value || [];\n\n    return (\n      <div className=\"array-form\">\n        {\n          array.map((item, itemIdx) => {\n            const inputField = renderFieldInput({\n              value: item,\n              name: `${originalField.name}.${itemIdx}`,\n            } as IConfigInputField, (fieldName, value) => {\n              const updatedArray = (originalField.value || []).map((localValue: any, idx: number) => {\n                if (idx === itemIdx) {\n                  return value;\n                }\n                return localValue;\n              });\n\n              onChange(originalField.name, updatedArray);\n            });\n\n            return (\n              <div className=\"array-form-item\" key={`array_form_${itemIdx}`}>\n                {inputField}\n                <i title={clearLabel} onClick={() => removeItemToFieldArray(originalField, itemIdx)} aria-label=\"Remove\" className=\"clear-input fa fa-times\"></i>\n              </div>\n            )\n          })\n        }\n        <Button className=\"add-array-item\" onClick={(e) => addItemToFieldArray(e, originalField)} title={addArrayItemLabel}>\n          <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\n        </Button>\n      </div>\n    );\n  }\n\n  function renderFieldInput(field: IConfigInputField, changeCallback: (fieldName: string, value: any, submitAfterChange?: boolean) => void) {\n    const inputProps = (defaultPlaceholder: string = '') => {\n      return {\n        value: field.value,\n        placeholder: field.placeholder || defaultPlaceholder,\n        disabled: field.readonly,\n        required: field.required,\n        onChange: (e: any) => changeCallback(field.name, e.target.value),\n      };\n    };\n\n    switch (field.type) {\n      case 'boolean':\n        return <input type=\"checkbox\" {...inputProps()} checked={field.value} onChange={(e) => changeCallback(field.name, e.target.checked, true)} />;\n      case 'select':\n        {\n          const { optionSource } = field;\n\n          if (optionSource && !optionSources[field.name]) {\n            loadOptionSourceFromRemote(field.name, optionSource);\n            return <select {...inputProps()}><option>-- Loading Options... --</option></select>\n          }\n\n          const sortBy = field.optionSource?.sortBy;\n          const finalOptions: { value: string, display: string }[] = optionSources[field.name] || field.options || [];\n          const sortedOptions = orderBy(finalOptions, typeof sortBy === 'string' ? [sortBy] : (sortBy || []));\n\n          return (\n            <select {...inputProps()}>\n              <option>-- Select --</option>\n              {\n                sortedOptions.map((option, idx) => {\n                  const key = `option_${idx}_`;\n                  if (typeof option !== 'object') {\n                    return <option key={`${key}_${option}`} value={option}>{option}</option>\n                  }\n                  return <option key={`${key}_${option.value}`} value={option.value}>{option.display || option.value}</option>\n                })\n              }\n            </select>\n          );\n        };\n      case 'object':\n        return <textarea {...inputProps(customLabels?.placeholders?.object || 'Enter JSON...')}></textarea>;\n      case 'array': {\n        const { arrayType, value } = field;\n        if (!value || !arrayType || arrayType === 'object') {\n          return <textarea {...inputProps(customLabels?.placeholders?.array || 'Enter JSON array...')}></textarea>;\n        }\n        return renderArrayItems(field);\n      }\n      case 'long-text':\n        return <textarea {...inputProps(customLabels?.placeholders?.text || 'Enter text...')}></textarea>;\n      case 'number':\n      case 'integer':\n        return <input type=\"number\" {...inputProps(customLabels?.placeholders?.number || '0')} onChange={(e) => changeCallback(field.name, e.target.valueAsNumber)} />;\n      case 'color':\n        return <input type=\"color\" {...inputProps(customLabels?.placeholders?.color || 'Enter color...')} />;\n      case 'email':\n        return <input type=\"email\" {...inputProps(customLabels?.placeholders?.email || 'Enter email...')} />;\n      case 'password':\n        return <input type=\"password\" {...inputProps(customLabels?.placeholders?.password || 'Enter password...')} />;\n      case 'hidden':\n        return <input type=\"hidden\" value={field.value} />;\n      case 'file':\n        return <input type=\"file\" accept={field.accept || '*'} placeholder={field.placeholder || customLabels?.placeholders?.file || 'Select file...'} name={field.name || 'file'} disabled={field.readonly} required={field.required} />;\n      case 'note':\n        return <p className=\"note\">{field.value}</p>;\n      case 'date':\n        return <input type=\"date\" {...inputProps(customLabels?.placeholders?.date || 'Enter date...')} />;\n      case 'text':\n      default:\n        return <input type=\"text\" {...inputProps(customLabels?.placeholders?.text || 'Enter text...')} />;\n    }\n  }\n\n  return (\n    <div className={`form-row ${direction || 'row'}`}>\n      {\n        field.type !== 'hidden' &&\n        <label>{field.label || field.originalName}{field.required ? ' *' : ''}</label>\n      }\n      {renderFieldInput(field, onChange)}\n      {\n        (showReset && !field.readonly && field.value && field.value.length > 0) &&\n        <i title={clearLabel} onClick={() => onChange(field.name, '', true)} aria-label=\"Clear\" className=\"clear-input fa fa-times\"></i>\n      }\n    </div>\n  );\n});\n","import React, { useState, useEffect } from 'react';\n\nimport { IConfigInputField } from '../../common/models/config.model';\nimport { FormRow } from '../formRow/formRow.comp';\nimport { Button } from '../button/button.comp';\n\nimport './queryParams.scss';\n\ninterface IProps {\n  initialParams: IConfigInputField[]\n  submitCallback: (queryParams: IConfigInputField[]) => void\n}\n\nexport const QueryParams = ({ initialParams, submitCallback }: IProps) => {\n  const [queryParams, setQueryParams] = useState<IConfigInputField[]>(initialParams);\n\n  function submit(e?: any) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    submitCallback(queryParams);\n  }\n\n  function formChanged(fieldName: string, value: any, submitAfterChange?: boolean) {\n    const updatedQueryParams: IConfigInputField[] = [...queryParams].map((field) => {\n      if (field.name === fieldName) {\n        field.value = value;\n      }\n\n      return field;\n    });\n\n    setQueryParams(updatedQueryParams);\n\n    if (submitAfterChange) {\n      submit();\n    }\n  }\n\n  useEffect(() => {\n    setQueryParams(initialParams);\n  }, [initialParams]);\n\n  if (!queryParams.length) {\n    return <React.Fragment></React.Fragment>;\n  }\n\n  return (\n    <section className=\"query-params-form\">\n      <h5>Query Params:</h5>\n      <form onSubmit={submit}>\n        {\n          queryParams.map((queryParam, idx) => {\n            return (\n              <FormRow \n                key={`query_param_${idx}`}\n                field={queryParam} \n                onChange={formChanged}\n                showReset={!queryParam.type || queryParam.type === 'text'}\n              />\n            );\n          })\n        }\n        <Button type=\"submit\" onClick={submit}>Submit</Button>\n      </form>\n    </section>\n  );\n};","import React, { Component, RefObject, ReactChild } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './popup.scss';\nimport { ICustomLabels } from '../../common/models/config.model';\n\ninterface IPopupProps {\n  className?: string\n  style?: any\n  show: boolean\n  closeCallback: any\n  children: ReactChild\n  refCallback?: string | ((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined\n  customLabels?: ICustomLabels\n}\n\nlet portalRoot: HTMLDivElement = document.getElementById('popup-portal') as HTMLDivElement;\nif (!portalRoot) {\n  portalRoot = document.createElement('div');\n  portalRoot.setAttribute('id', 'popup-portal');\n  document.body.append(portalRoot);\n}\n\nclass PortalPopup extends Component {\n  private el: HTMLElement;\n\n  constructor(props: any) {\n    super(props);\n\n    this.el = document.createElement('div');\n  }\n\n  componentDidMount = () => {\n    portalRoot.appendChild(this.el);\n  }\n\n  componentWillUnmount = () => {\n    portalRoot.removeChild(this.el);\n  }\n\n  render() {\n    return ReactDOM.createPortal(this.props.children, this.el);\n  }\n}\n\nexport class Popup extends Component<IPopupProps> {\n  render() {\n    const style: any = Object.assign({}, { display: this.props.show ? 'block' : 'none' }, this.props.style || {});\n    const closeLabel = this.props.customLabels?.buttons?.closeForm || 'Close';\n\n    return (\n      <PortalPopup>\n        {\n          this.props.show ?\n            <div className={`popup ${this.props.className || ''}`} style={style}>\n              <div className=\"overlay\" onClick={(e: any) => this.props.closeCallback(e)}></div>\n              <div className=\"popup-content\" ref={this.props.refCallback}>\n                {this.props.children}\n                <button title={closeLabel} className=\"close-popup\" onClick={(e: any) => this.props.closeCallback(e)}>\n                  <i className=\"fa fa-times\" aria-hidden=\"true\"></i>\n                </button>\n              </div>\n            </div> :\n            null\n        }\n      </PortalPopup>\n    );\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this._handleKeyDown.bind(this));\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this._handleKeyDown.bind(this));\n  }\n\n  _handleKeyDown = (e: KeyboardEvent) => {\n    const { show, closeCallback } = this.props;\n\n    if (show && e.keyCode === 27) {\n      closeCallback(e);\n    }\n  }\n};","import { IConfigInputField } from '../common/models/config.model';\n\nclass FileHelpers {\n\n  public isMultipartForm(fields: IConfigInputField[]): boolean {\n    for (const fieldIndex in fields) {\n      let field = fields[fieldIndex];\n\n      if (field.type === 'file') {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  \n}\n\nexport const fileHelpers = new FileHelpers();","import React, { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nimport { Popup } from '../popup/popup.comp';\nimport {\n  IConfigInputField,\n  IConfigGetSingleMethod,\n  IConfigPostMethod,\n  IConfigPutMethod,\n  ICustomLabels\n} from '../../common/models/config.model';\nimport { FormRow } from '../formRow/formRow.comp';\nimport { Button } from '../button/button.comp';\nimport { Loader } from '../loader/loader.comp';\nimport { dataHelpers } from '../../helpers/data.helpers';\nimport { fileHelpers } from '../../helpers/file.helpers';\nimport { IAppContext } from '../app.context';\nimport { withAppContext } from '../withContext/withContext.comp';\n\nimport './formPopup.scss';\n\nconst flatten = require('flat');\nconst unflatten = require('flat').unflatten;\n\ninterface IProps {\n  context: IAppContext\n  title: string\n  fields: IConfigInputField[]\n  rawData?: any\n  getSingleConfig?: IConfigGetSingleMethod\n  methodConfig: IConfigPostMethod | IConfigPutMethod\n  closeCallback: (reloadData: boolean) => void\n  submitCallback: (body: any, containFiles: boolean) => void\n}\n\nexport const FormPopup = withAppContext(({ context, title, fields, rawData, getSingleConfig, methodConfig, submitCallback, closeCallback }: IProps) => {\n  const fieldsCopy: IConfigInputField[] = JSON.parse(JSON.stringify(fields));\n  const { httpService, activePage, config } = context;\n  const [loading, setLoading] = useState<boolean>(true);\n  const [formFields, setFormFields] = useState<IConfigInputField[]>([]);\n  const [finalRawData, setFinalRawData] = useState<any>(null);\n  const pageHeaders: any = activePage?.requestHeaders || {};\n  const customLabels: ICustomLabels | undefined = { ...config?.customLabels, ...activePage?.customLabels };\n\n  async function initFormFields() {\n    let finalRawData: any = rawData || {};\n\n    if (getSingleConfig && getSingleConfig.url) {\n      try {\n        const { url, requestHeaders, actualMethod, dataPath, queryParams } = getSingleConfig;\n        const result = await httpService.fetch({\n          method: actualMethod || 'get',\n          origUrl: url,\n          queryParams,\n          headers: Object.assign({}, pageHeaders,  requestHeaders || {}),\n          rawData,\n        });\n\n        const extractedData = dataHelpers.extractDataByDataPath(result, dataPath);\n\n        if (extractedData && typeof extractedData === 'object') {\n          finalRawData = extractedData;\n        }\n      } catch (e) {\n        console.error('Could not load single item\\'s data.', e);\n        toast.error('Could not load single item\\'s data.');\n      }\n    }\n\n    setFinalRawData(finalRawData); // Store the raw data for later.\n\n    const flattenData = flatten(finalRawData || {});\n\n    setFormFields(fieldsCopy.map((field) => {\n      let key = field.name;\n\n      field.originalName = field.name;\n\n      if (field.dataPath) {\n        key = `${field.dataPath}.${field.name}`;\n      }\n\n      // Changing field name to include datapath\n      // This will use us later for unflatten the final object\n      field.name = key;\n\n      if (dataHelpers.checkIfFieldIsObject(field)) {\n        if (finalRawData[key] || field.value) {\n          field.value = JSON.stringify(finalRawData[key] || field.value, null, '  ') || '';\n        }\n        return field;\n      }\n\n      if (field.type === 'array') {\n        field.value = finalRawData[key] || field.value || [];\n        return field;\n      }\n\n      if (typeof flattenData[key] !== 'undefined') {\n        field.value = flattenData[key];\n      } else {\n        // important in order to prevent controlled / uncontrolled components error\n        field.value = typeof field.value === 'undefined' ? '' : field.value;\n      }\n\n      return field;\n    }));\n\n    setLoading(false);\n  }\n\n  async function submitForm(e: any) {\n    e.preventDefault();\n\n    const finalObject: any = (methodConfig as IConfigPutMethod).includeOriginalFields ? Object.assign({}, finalRawData) : {};\n    const formData = new FormData();\n    const containFiles: boolean = fileHelpers.isMultipartForm(formFields);\n    let validationError = null;\n\n    formFields.forEach((field) => {\n      if (field.type === 'file') {\n        const fileInput: any = document.querySelector(`input[name=\"${field.name || 'file'}\"]`) as HTMLInputElement;\n\n        if (fileInput.files.length > 0) {\n          const firstFile = fileInput.files[0];\n          formData.append(field.name || 'file', firstFile, firstFile.name);\n        }\n        return;\n      }\n\n      finalObject[field.name] = field.value;\n\n      if (containFiles) {\n        formData.append(field.name, field.value);\n      }\n\n      if (field.required && field.type !== 'boolean' && !field.value) {\n        validationError = 'Please fill up all required fields.';\n      }\n\n      if (dataHelpers.checkIfFieldIsObject(field) && field.value) {\n        try {\n          finalObject[field.name] = JSON.parse(field.value);\n        } catch (e) {\n          validationError = `Invalid JSON for field \"${field.name}\".`;\n        }\n      }\n\n      if (field.type === 'boolean') {\n        finalObject[field.name] = field.value || false;\n      }\n\n      if (field.type === 'encode') {\n        finalObject[field.name] = encodeURIComponent(field.value);\n      }\n    });\n\n    if (validationError) {\n      toast.error(validationError);\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const body = containFiles ? formData : unflatten(finalObject);\n      await submitCallback(body, containFiles);\n\n      toast.success('Great Success!');\n\n      closeCallback(true);\n    } catch (e) {\n      toast.error(e.message);\n    }\n\n    setLoading(false);\n  }\n\n  function formChanged(fieldName: string, value: any) {\n    let updatedFormFields: IConfigInputField[] = JSON.parse(JSON.stringify(formFields));\n\n    updatedFormFields = updatedFormFields.map((field: IConfigInputField) => {\n      if (field.name === fieldName) {\n        field.value = value;\n      }\n\n      return field;\n    });\n\n    setFormFields(updatedFormFields);\n  }\n\n  useEffect(() => {\n    initFormFields();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Popup\n      show={true}\n      className=\"form-popup\"\n      closeCallback={() => closeCallback(false)}\n      customLabels={customLabels}\n    >\n      <React.Fragment>\n        <h2>{title}</h2>\n        <section>\n          {\n            loading ?\n            <Loader /> :\n            <form onSubmit={submitForm}>\n              {\n                formFields.map((field, idx) => {\n                  return (\n                    <FormRow\n                      key={`field_${idx}`}\n                      field={field}\n                      onChange={formChanged}\n                      showReset={!field.type || field.type === 'text'}\n                    />\n                  );\n                })\n              }\n              <div className=\"buttons-wrapper center\">\n                <Button type=\"submit\" onClick={submitForm} color=\"green\">Submit</Button>\n              </div>\n            </form>\n          }\n        </section>\n      </React.Fragment>\n    </Popup>\n  );\n});\n","import React from 'react';\n\nimport './filterField.scss';\n\ninterface IProps {\n  onChange: (filter: string) => void\n}\n\nexport const FilterField = ({ onChange }: IProps) => {\n  return (\n    <section className=\"filter-wrapper\">\n      <h5>Filter:</h5>\n      <div className=\"form-row\">\n        <input type=\"text\" placeholder=\"Search...\" onChange={(e) => onChange(e.target.value.toLowerCase())} />\n      </div>\n    </section>\n  );\n};","import React, { useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport * as QueryString from 'query-string';\nimport { toast } from 'react-toastify';\nimport { orderBy } from 'natural-orderby';\n\nimport { IAppContext } from '../app.context';\nimport { IConfigPage, IConfigMethods, IConfigGetAllMethod, IConfigPostMethod, IConfigPutMethod, IConfigDeleteMethod, IConfigInputField, IConfigCustomAction, IConfigGetSingleMethod, ICustomLabels } from '../../common/models/config.model';\nimport { withAppContext } from '../withContext/withContext.comp';\nimport { Loader } from '../loader/loader.comp';\nimport { dataHelpers } from '../../helpers/data.helpers';\nimport { Table } from '../table/table.comp';\nimport { Cards } from '../cards/cards.comp';\nimport { QueryParams } from '../queryParams/queryParams.comp';\nimport { Button } from '../button/button.comp';\nimport { FormPopup } from '../formPopup/formPopup.comp';\nimport { FilterField } from '../filterField/filterField.comp';\n\nimport './page.scss';\n\ninterface IProps {\n  context: IAppContext\n}\n\ninterface IPopupProps {\n  type: 'add' | 'update' | 'action'\n  title: string\n  config: IConfigPostMethod | IConfigPutMethod\n  submitCallback: (body: any, containFiles: boolean) => void\n  getSingleConfig?: IConfigGetSingleMethod\n  rawData?: {}\n}\n\nconst PageComp = ({ context }: IProps) => {\n  const { page } = useParams();\n  const { push, location } = useHistory();\n  const { activePage, error, setError, httpService, config } = context;\n  const pageHeaders: any = activePage?.requestHeaders || {};\n  const pageMethods: IConfigMethods | undefined = activePage?.methods;\n  const customActions: IConfigCustomAction[] = activePage?.customActions || [];\n  const getAllConfig: IConfigGetAllMethod | undefined = pageMethods?.getAll;\n  const getSingleConfig: IConfigGetSingleMethod | undefined = pageMethods?.getSingle;\n  const postConfig: IConfigPostMethod | undefined = pageMethods?.post;\n  const putConfig: IConfigPutMethod | undefined = pageMethods?.put;\n  const deleteConfig: IConfigDeleteMethod | undefined = pageMethods?.delete;\n  const customLabels: ICustomLabels | undefined = { ...config?.customLabels, ...activePage?.customLabels };\n  const addItemLabel = customLabels?.buttons?.addItem || '+ Add Item';\n  const addItemFormTitle = customLabels?.formTitles?.addItem || 'Add Item';\n  const editItemFormTitle = customLabels?.formTitles?.editItem || 'Update Item';\n  const [loading, setLoading] = useState<boolean>(false);\n  const [openedPopup, setOpenedPopup] = useState<null | IPopupProps>(null);\n  const [queryParams, setQueryParams] = useState<IConfigInputField[]>(getAllConfig?.queryParams || []);\n  const [items, setItems] = useState<any[]>([]);\n  const [filter, setFilter] = useState<string>('');\n\n  function closeFormPopup(refreshData: boolean = false) {\n    setOpenedPopup(null);\n\n    if (refreshData === true) {\n      getAllRequest();\n    }\n  }\n\n  async function openEditPopup(rawData: any) {\n    const params: IPopupProps = {\n      rawData,\n      type: 'update',\n      title: editItemFormTitle,\n      config: putConfig as IConfigPutMethod,\n      getSingleConfig,\n      submitCallback: async (body: any, containFiles: boolean) => {\n        return await updateItem(body, rawData, containFiles);\n      }\n    };\n\n    setOpenedPopup(params);\n  }\n\n  function openCustomActionPopup(rawData: any, action: IConfigCustomAction) {\n    const params: IPopupProps = {\n      rawData,\n      type: 'action',\n      title: action.name || 'Custom Action',\n      config: action as IConfigCustomAction,\n      submitCallback: async (body: any, containFiles: boolean) => {\n        return await performAction(body, rawData, action, containFiles);\n      }\n    };\n\n    setOpenedPopup(params);\n  }\n\n  async function performAction(body: any, rawData: any, action: IConfigCustomAction, containFiles: boolean) {\n    const { url, requestHeaders, actualMethod } = action;\n\n    return await httpService.fetch({\n      method: actualMethod || 'put',\n      origUrl: url,\n      rawData,\n      body: containFiles ? body : JSON.stringify(body),\n      headers: {\n        ...pageHeaders,\n        ...(requestHeaders || {}),\n        ...(containFiles ? {} : { 'content-type': 'application/json' })\n      },\n      responseType: 'boolean'\n    });\n  }\n\n  function extractQueryParams(): IConfigInputField[] {\n    const parsedParams = QueryString.parse(location.search);\n    const finalQueryParams: IConfigInputField[] = (getAllConfig?.queryParams || []).map((queryParam) => {\n      if (typeof parsedParams[queryParam.name] !== 'undefined') {\n        queryParam.value = queryParam.type === 'boolean' ? (parsedParams[queryParam.name] === 'true') : decodeURIComponent(parsedParams[queryParam.name] as any);\n      } else {\n        queryParam.value = queryParam.value || '';\n      }\n      return queryParam;\n    });\n\n    return finalQueryParams\n  }\n\n  async function getAllRequest() {\n    setLoading(true);\n    setError(null);\n\n    try {\n      if (!getAllConfig) {\n        throw new Error('Get all method is not defined.');\n      }\n\n      const { url, requestHeaders, actualMethod, dataPath, sortBy, dataTransform } = getAllConfig;\n      const result = await httpService.fetch({\n        method: actualMethod || 'get',\n        origUrl: url,\n        queryParams: extractQueryParams(),\n        headers: Object.assign({}, pageHeaders, requestHeaders || {})\n      });\n      let extractedData = dataHelpers.extractDataByDataPath(result, dataPath);\n\n      if (!extractedData) {\n        throw new Error('Could not extract data from response.');\n      }\n\n      if (!Array.isArray(extractedData)) {\n        throw new Error('Extracted data is invalid.');\n      }\n\n      if (typeof dataTransform === 'function') {\n        extractedData = await dataTransform(extractedData);\n      }\n\n      const orderedItems = orderBy(extractedData, typeof sortBy === 'string' ? [sortBy] : (sortBy || []));\n\n      setItems(orderedItems);\n    } catch (e) {\n      setError(e.message);\n    }\n\n    setLoading(false);\n  }\n\n  async function addItem(body: any, containFiles?: boolean) {\n    if (!postConfig) {\n      throw new Error('Post method is not defined.');\n    }\n\n    const { url, requestHeaders, actualMethod } = postConfig;\n\n    return await httpService.fetch({\n      method: actualMethod || 'post',\n      origUrl: url,\n      body: containFiles ? body : JSON.stringify(body),\n      headers: {\n        ...pageHeaders,\n        ...(requestHeaders || {}),\n        ...(containFiles ? {} : { 'content-type': 'application/json' })\n      },\n      responseType: 'boolean'\n    });\n  }\n\n  async function updateItem(body: any, rawData: any, containFiles?: boolean) {\n    if (!putConfig) {\n      throw new Error('Put method is not defined.');\n    }\n\n    const { url, requestHeaders, actualMethod } = putConfig;\n\n    return await httpService.fetch({\n      method: actualMethod || 'put',\n      origUrl: url,\n      rawData,\n      body: containFiles ? body : JSON.stringify(body),\n      headers: {\n        ...pageHeaders,\n        ...(requestHeaders || {}),\n        ...(containFiles ? {} : { 'content-type': 'application/json' })\n      },\n      responseType: 'boolean'\n    });\n  }\n\n  async function deleteItem(item: any) {\n    const approved: boolean = window.confirm('Are you sure you want to delete this item?');\n\n    if (!approved) {\n      return;\n    }\n\n    try {\n      if (!deleteConfig) {\n        throw new Error('Delete method is not defined.');\n      }\n\n      const { url, requestHeaders, actualMethod } = deleteConfig;\n      const success = await httpService.fetch({\n        method: actualMethod || 'delete',\n        origUrl: url,\n        rawData: item,\n        headers: Object.assign({}, pageHeaders, requestHeaders || {}),\n        responseType: 'boolean'\n      });\n\n      if (success) {\n        getAllRequest();\n      }\n    } catch (e) {\n      toast.error(e.message);\n    }\n  }\n\n  function submitQueryParams(updatedParams: IConfigInputField[]) {\n    setQueryParams(updatedParams);\n\n    if (loading) {\n      return;\n    }\n\n    // Building query string\n    const queryState: string = queryParams.map((queryParam, idx) => {\n      return `${idx === 0 ? '?' : ''}${queryParam.name}=${encodeURIComponent(queryParam.value || '')}`;\n    }).join('&');\n\n    // Pushing query state to url\n    push(queryState);\n  }\n\n  function renderTable() {\n    if (loading) {\n      return <Loader />;\n    }\n\n    const fields = getAllConfig?.fields || getAllConfig?.display?.fields || [];\n    const fieldsToFilter = fields.filter((field) => (field.filterable)).map((field) => field.name);\n    let filteredItems = items;\n\n    if (filter && fieldsToFilter.length) {\n      filteredItems = items.filter((item) => {\n        let passFilter = false;\n        fieldsToFilter.forEach((fieldName) => {\n          const value = item[fieldName];\n          if (typeof value === 'string' && value.toLowerCase().indexOf(filter) >= 0) {\n            passFilter = true;\n          }\n        })\n        return passFilter;\n      });\n    }\n\n    if (!filteredItems.length) {\n      return <div className=\"app-error\">Nothing to see here. Result is empty.</div>;\n    }\n\n    const callbacks = {\n      delete: deleteConfig ? deleteItem : null,\n      put: putConfig ? openEditPopup : null,\n      action: customActions.length ? openCustomActionPopup : () => { },\n    };\n\n    if (getAllConfig?.display.type === 'cards') {\n      return (\n        <Cards\n          callbacks={callbacks}\n          fields={fields}\n          items={filteredItems}\n          customActions={customActions}\n          customLabels={customLabels}\n        />\n      );\n    }\n\n    return (\n      <Table\n        callbacks={callbacks}\n        fields={fields}\n        items={filteredItems}\n        customActions={customActions}\n        customLabels={customLabels}\n      />\n    );\n  }\n\n  function renderPageContent() {\n    const fields = getAllConfig?.fields || getAllConfig?.display?.fields || [];\n    const fieldsToFilter = fields.filter((field) => (field.filterable)).map((field) => field.name);\n\n    return (\n      <React.Fragment>\n        <QueryParams\n          initialParams={queryParams}\n          submitCallback={submitQueryParams}\n        />\n        {\n          fieldsToFilter.length > 0 &&\n          <FilterField onChange={setFilter} />\n        }\n        {\n          error ?\n            <div className=\"app-error\">{error}</div> :\n            renderTable()\n        }\n      </React.Fragment>\n    )\n  }\n\n  useEffect(() => {\n    const nextActivePage: IConfigPage | null = context?.config?.pages?.filter((p, pIdx) => p.id === page || (pIdx + 1) === parseInt(page || ''))[0] || null;\n    context.setActivePage(nextActivePage);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page]);\n\n  useEffect(() => {\n    setQueryParams(extractQueryParams());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activePage]);\n\n  useEffect(() => {\n    // Load data when query params changed\n    getAllRequest();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [queryParams]);\n\n  return (\n    <div className=\"app-page\">\n      <header className=\"app-page-header\">\n        <hgroup>\n          <h2>{activePage?.name}</h2>\n          {\n            activePage?.description &&\n            <h4>{activePage?.description}</h4>\n          }\n        </hgroup>\n        {\n          postConfig &&\n          <Button className=\"add-item\" color=\"green\" onClick={() => setOpenedPopup({ type: 'add', title: addItemFormTitle, config: postConfig, submitCallback: addItem })}>{addItemLabel}</Button>\n        }\n      </header>\n      <main className=\"app-page-content\">\n        {renderPageContent()}\n      </main>\n      {\n        openedPopup &&\n        <FormPopup\n          title={openedPopup.title}\n          closeCallback={closeFormPopup}\n          submitCallback={openedPopup.submitCallback}\n          fields={openedPopup.config?.fields || []}\n          rawData={openedPopup.rawData}\n          getSingleConfig={openedPopup.getSingleConfig}\n          methodConfig={openedPopup.config}\n        />\n      }\n    </div>\n  );\n}\n\nexport const Page = withAppContext(PageComp);\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { IAppContext } from '../app.context';\nimport { withAppContext } from '../withContext/withContext.comp';\nimport { Button } from '../button/button.comp';\n\nimport './navigation.scss';\n\ninterface IProps {\n  context: IAppContext\n}\n\nconst NavigationComp = ({ context: { config } }: IProps) => {\n  const [isOpened, setIsOpened] = useState<boolean>(false);\n\n  return (\n    <nav className=\"app-nav\">\n      <Button className=\"app-nav-opener\" onClick={() => setIsOpened(!isOpened)}>\n        {\n          isOpened ? \n          <i className=\"fa fa-times\" aria-hidden=\"true\"></i> : \n          <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\n        }\n      </Button>\n\n      <div className={`app-nav-wrapper ${isOpened ? 'opened' : ''}`}>\n        <div className=\"app-nav-links\">\n          {\n            (config?.pages || []).map((page, idx) => (\n              <NavLink to={`/${page.id || idx + 1}`} activeClassName=\"active\" key={`page_${idx}`} onClick={() => setIsOpened(false)}>{page.name}</NavLink>\n            ))\n          }\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport const Navigation = withAppContext(NavigationComp);","import React from 'react';\nimport { ICustomStyles } from '../../common/models/config.model';\n\ninterface IProps {\n  styles: ICustomStyles\n}\n\nexport const CustomStyles = ({ styles }: IProps) => {\n  const cssVars = styles.vars || {};\n  const arr = [];\n  \n  for (const key in cssVars) {\n    arr.push(`--${key}: ${(cssVars as any)[key]}`);\n  }\n\n  return (\n    <style dangerouslySetInnerHTML={{ __html: `\n      :root {\n        ${arr.join(';')}\n      }\n    ` }}>\n    </style>\n  );\n};","import React, { useEffect, useState } from 'react';\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport ConfigService from '../services/config.service';\nimport { IConfig, IConfigPage } from '../common/models/config.model';\nimport { Page } from '../components/page/page.comp';\nimport { Navigation } from '../components/navigation/navigation.comp';\nimport { AppContext } from './app.context';\nimport HttpService from '../services/http.service';\nimport { CustomStyles } from './customStyles/customStyles.comp';\n\nimport './app.scss';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst httpService = new HttpService();\nconst defaultAppName: string = 'RESTool App';\n\nfunction changeFavicon(src: string) {\n  const link = document.createElement('link');\n  const oldLink = document.getElementById('favicon');\n  link.id = 'favicon';\n  link.rel = 'shortcut icon';\n  link.href = src;\n  if (oldLink) {\n   document.head.removeChild(oldLink);\n  }\n  document.head.appendChild(link);\n }\n\nfunction App() {\n  const [firstLoad, setFirstLoad] = useState<boolean>(true);\n  const [config, setConfig] = useState<IConfig | null>(null);\n  const [activePage, setActivePage] = useState<IConfigPage | null>(config?.pages?.[0] || null);\n  const [error, setError] = useState<string | null>(null);\n\n  async function loadConfig(url?: string): Promise<void> {\n    try {\n      const windowConfig = (window as any).RESTool?.config;\n      let remoteConfig: IConfig; \n      // Try to load config from window object first\n      if (!url && windowConfig) {\n        remoteConfig = Object.assign({}, windowConfig, {});\n      } else {\n        remoteConfig = url ? await ConfigService.getRemoteConfig(url) : await ConfigService.loadDefaultConfig();\n      }\n\n      // Setting global config for httpService\n      httpService.baseUrl = remoteConfig.baseUrl || '';\n      httpService.errorMessageDataPath = remoteConfig.errorMessageDataPath || '';\n      httpService.unauthorizedRedirectUrl = remoteConfig.unauthorizedRedirectUrl || '';\n      httpService.requestHeaders = remoteConfig.requestHeaders || {};\n      document.title = remoteConfig.name || defaultAppName;\n\n      if (remoteConfig?.favicon) {\n        changeFavicon(remoteConfig.favicon);\n      }\n\n      if (remoteConfig?.remoteUrl) {\n        return await loadConfig(remoteConfig.remoteUrl);\n      }\n\n      setConfig(remoteConfig);\n    } catch (e) {\n      console.error('Could not load config file', e);\n    }\n\n    setFirstLoad(false);\n  }\n\n  function scrollToTop(scrollDuration: number = 250) {\n    var cosParameter = window.scrollY / 2,\n    scrollCount = 0,\n    oldTimestamp = performance.now();\n\n    function step (newTimestamp: number) {\n        scrollCount += Math.PI / (scrollDuration / (newTimestamp - oldTimestamp));\n\n        if (scrollCount >= Math.PI) {\n          window.scrollTo(0, 0);\n        }\n\n        if (window.scrollY === 0) {\n          return;\n        }\n\n        window.scrollTo(0, Math.round(cosParameter + cosParameter * Math.cos(scrollCount)));\n        oldTimestamp = newTimestamp;\n        window.requestAnimationFrame(step);\n    }\n\n    window.requestAnimationFrame(step);\n  }\n\n  useEffect(() => {\n    loadConfig();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    const { isValid, errorMessage } = ConfigService.validateConfig(config);\n    if (!isValid) {\n      setError(errorMessage);\n      toast.error(errorMessage);\n      return;\n    }\n    return;\n  }, [config]);\n\n  const appName: string = config?.name || defaultAppName;\n\n  return (\n    <div className=\"restool-app\">\n      {\n        !config ?\n        <div className=\"app-error\">\n          {firstLoad ? 'Loading Configuration...' : 'Could not find config file.'}\n        </div> :\n        <AppContext.Provider value={{ config, activePage, setActivePage, error, setError, httpService }}>\n          {\n            config.customStyles &&\n            <CustomStyles\n              styles={config.customStyles}\n            />\n          }\n          <Router>\n            <aside>\n              <h1 title={appName} onClick={() => scrollToTop()}>{appName}</h1>\n              {\n                <Navigation />\n              }\n            </aside>\n            {\n              config &&\n              <Switch>\n                <Route exact path=\"/:page\" component={Page} />\n                <Redirect path=\"/\" to={`/${config?.pages?.[0]?.id || '1'}`} />\n              </Switch>\n            }\n            <ToastContainer\n              position={toast.POSITION.TOP_CENTER}\n              autoClose={4000}\n              draggable={false}\n            />\n          </Router>\n        </AppContext.Provider>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config: any) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config: any) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config: any) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}